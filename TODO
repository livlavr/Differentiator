[] Нода для дифференциатора
    [] Parent
    [] тип ноды: число, переменная, операция (enum)
    [] значение ноды (struct value: char, double, int)
    [] left, right указатели
[] Dump для дифференциатора
    [] надо смотреть на тип ноды и в зависимости от этого выводить разную инфу
[] Проверить работает ли верификатор на количество детей (мб вообще убрать это)
[] Ручками сделать тестировочное дерево (3 * x) / ((1000 - 7x) + 15)
[] Функция node* CreateNode(OP/VAR/NUM, ADD/SUB/.../1/2/..., NULL, NULL)
    [] Указатели, передающиеся в функцию - это поддеревья, которые линканутся к этой ноде
    [] Когда нода создается - создается новое дерево, получается после линковки оно должно free-шиться
       или ноды скреплены, но висят без дерева?
[] DSL
    [] _DIV/_ADD/.../_NUM/_VAR(auto, auto, NULL, NULL)
[] В дереве используем инфиксную запись
[] Чтобы узнать нужно ставить скобки или нет смотрим на родительскую ноду
[] Сделать структуру со значениями переменных
[] Замутить рекурсивный сдвиг коллеги
[] Структура с оптимизициями - хранит исходное значение и оптимизированное значение
[] inline не нужен
[] template <> не нужен
